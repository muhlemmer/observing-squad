FROM golang:1.18 as builder

RUN git clone https://github.com/ElrondNetwork/elrond-config-mainnet && cd elrond-config-mainnet && git checkout --force tags/v1.2.38.1
RUN git clone https://github.com/ElrondNetwork/elrond-go.git && cd elrond-go && git checkout --force tags/v1.2.38

WORKDIR /go/elrond-go/
RUN GO111MODULE=on go mod vendor

#Build node binary
WORKDIR /go/elrond-go/cmd/node
RUN go build -i -v -ldflags="-X main.appVersion=$(git -C /go/elrond-config-mainnet describe --tags --long --dirty)"

#Build keygenerator
WORKDIR /go/elrond-go/cmd/keygenerator
RUN go build

RUN cp /go/pkg/mod/github.com/!elrond!network/arwen-wasm-vm@$(cat /go/elrond-go/go.mod | grep arwen-wasm-vm | sed 's/.* //' | tail -n 1)/wasmer/libwasmer_linux_amd64.so /lib/libwasmer_linux_amd64.so

# ===== SECOND STAGE ======
FROM ubuntu:20.04

ENV uid=1000
RUN useradd -U -u ${uid} -d /dev/null -M -s /sbin/nologin elrond

COPY --from=builder /go/elrond-go/cmd/node/node /usr/local/bin/node
COPY --from=builder /go/elrond-go/cmd/keygenerator/keygenerator /usr/local/bin/keygenerator

COPY --from=builder /go/elrond-config-mainnet/ /elrond-config-mainnet
COPY --from=builder "/lib/libwasmer_linux_amd64.so" "/lib/libwasmer_linux_amd64.so"
COPY node-entrypoint.sh /

VOLUME [ "/data" ]
EXPOSE 8080

WORKDIR /data
ENTRYPOINT ["/node-entrypoint.sh", "node", "--log-save", "--log-level=*:DEBUG,core/dblookupext:WARN", "--log-logger-name", "--rest-api-interface=0.0.0.0:8080"]
